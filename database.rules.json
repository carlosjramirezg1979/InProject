rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /projectManagers/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      // Allow user to create their own profile
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow user to update their own profile, but only certain fields
      allow update: if request.auth != null && request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['firstName', 'lastName', 'phone', 'country', 'department', 'city', 'companyIds']);
      allow delete: if false;
    }

    match /companies/{companyId} {
      // User can read a company if they are the owner
      allow read: if request.auth != null && resource.data.ownerId == request.auth.uid;
      // User can create a company if they are the owner
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      // User can update a company if they are the owner
      allow update: if request.auth != null && resource.data.ownerId == request.auth.uid;
      allow delete: if false;
    }

    match /projects/{projectId} {
      // User can read a project if they are the project manager
      allow read: if request.auth != null && resource.data.projectManagerId == request.auth.uid;
      // User can create a project if they are the project manager
      allow create: if request.auth != null && request.resource.data.projectManagerId == request.auth.uid;
      // User can update companyId or status if they are the project manager
      allow update: if request.auth != null && resource.data.projectManagerId == request.auth.uid && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['companyId', 'status']);
      allow delete: if false;
    }
  }
}